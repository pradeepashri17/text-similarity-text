# -*- coding: utf-8 -*-
"""Part b

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ULp0wwUE1n2op01F0Yc-GWYzuNe3a1t
"""

!pip install fastapi uvicorn nest-asyncio pyngrok sentence-transformers torch

import nest_asyncio
import uvicorn
from fastapi import FastAPI
from pydantic import BaseModel
from sentence_transformers import SentenceTransformer, util
import torch

nest_asyncio.apply()

# Initialize FastAPI app
app = FastAPI()

# Load SBERT model
model = SentenceTransformer('sentence-transformers/all-mpnet-base-v2')

def compute_similarity(text1: str, text2: str) -> float:
    """Compute cosine similarity between two texts."""
    embedding1 = model.encode(text1, convert_to_tensor=True)
    embedding2 = model.encode(text2, convert_to_tensor=True)

    # Normalize embeddings to prevent negative scores
    embedding1 = torch.nn.functional.normalize(embedding1, p=2, dim=0)
    embedding2 = torch.nn.functional.normalize(embedding2, p=2, dim=0)

    similarity = util.pytorch_cos_sim(embedding1, embedding2).item()
    return round(max(0, similarity), 4)  # Ensure score is between 0-1

# Define request format
class TextPair(BaseModel):
    text1: str
    text2: str

# API Endpoint
@app.post("/similarity")
def get_similarity(data: TextPair):
    score = compute_similarity(data.text1, data.text2)
    return {"similarity score": score}

# Start API in background
def start_api():
    uvicorn.run(app, host="0.0.0.0", port=8000)

!ngrok config add-authtoken 2uJa61vntAmLtUE3nEU6mo9j2xf_3KKZc8aarCjxMXc8mA9q4

from pyngrok import ngrok

# Expose API
public_url = ngrok.connect(8000)
print(f"Public API URL: {public_url}")
start_api()

!curl -I https://d4f4-35-236-176-172.ngrok-free.app

# Commented out IPython magic to ensure Python compatibility.
# %%writefile requirements.txt
# fastapi
# uvicorn
# sentence-transformers
# torch
#

# Commented out IPython magic to ensure Python compatibility.
# %%writefile Procfile
# web: uvicorn app:app --host 0.0.0.0 --port $PORT
#